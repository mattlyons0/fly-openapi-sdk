/*
 * Machines API
 * # Introduction  Fly Machines are the compute behind the Fly.io platform. They are fast-launching VMs that can be started and stopped at subsecond speeds. A Machine is the configuration and state for a single VM running on our platform. Every Machine will belong to a Fly App; Apps can have more than one Machine. Read more [here](https://fly.io/docs/machines/).  The Machines REST API allows you to provison and manage Apps, Machines and Volumes on the Fly.io platform. To manage other Fly.io resources like organizations, use the [GraphQL API](https://fly.io/docs/networking/custom-domains-with-fly/#graphql-api-notes).  ## Authentication  All requests must include the Fly API Token in the HTTP Headers as follows:  ``` Authorization: Bearer [TOKEN] ```  You can get your API token using [flyctl](https://fly.io/docs/hands-on/install-flyctl/) by running `fly auth token`  ## Base URL  The easiest (and recommended) way to connect to the Machines API is to use the public `api.machines.dev` endpoint, a simpler and more performant alternative to connecting over WireGuard. You can still access your Machines directly over a WireGuard VPN, and use the private Machines API endpoint: `http://_api.internal:4280`. This method requires more setup.  Follow the [instructions](https://fly.io/docs/networking/private-networking/#private-network-vpn) to set up a permanent WireGuard connection to your Fly.io [IPv6 private network](https://fly.io/docs/networking/private-networking/). Once youâ€™re connected, Fly internal DNS should expose the Machines API endpoint at: `http://_api.internal:4280`  ## Response Codes  The API uses conventional HTTP status codes to signal whether a request was successful or not.  Typically, 2xx HTTP status codes denote successful operations, 4xx codes imply failures related to the user, and 5xx codes suggest problems with the infrastructure.  | Status | Description                                 | | :----: | ------------------------------------------- | | `200`  | Successful request.                         | | `201`  | Created successfully.                       | | `202`  | Successful request. No content.             | | `400`  | Check that the parameters were correct.     | | `401`  | The API key used was missing or invalid.    | | `404`  | The resource was not found.                 | | `5xx`  | Indicates an error with Fly.io API servers. | 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.fly.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ApiMachineGuest
 */
@JsonPropertyOrder({
  ApiMachineGuest.JSON_PROPERTY_CPU_KIND,
  ApiMachineGuest.JSON_PROPERTY_CPUS,
  ApiMachineGuest.JSON_PROPERTY_GPU_KIND,
  ApiMachineGuest.JSON_PROPERTY_GPUS,
  ApiMachineGuest.JSON_PROPERTY_HOST_DEDICATION_ID,
  ApiMachineGuest.JSON_PROPERTY_KERNEL_ARGS,
  ApiMachineGuest.JSON_PROPERTY_MEMORY_MB
})
@JsonTypeName("api.MachineGuest")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-04T04:08:18.495225938Z[Etc/UTC]")
public class ApiMachineGuest {
  public static final String JSON_PROPERTY_CPU_KIND = "cpu_kind";
  private String cpuKind;

  public static final String JSON_PROPERTY_CPUS = "cpus";
  private Integer cpus;

  public static final String JSON_PROPERTY_GPU_KIND = "gpu_kind";
  private String gpuKind;

  public static final String JSON_PROPERTY_GPUS = "gpus";
  private Integer gpus;

  public static final String JSON_PROPERTY_HOST_DEDICATION_ID = "host_dedication_id";
  private String hostDedicationId;

  public static final String JSON_PROPERTY_KERNEL_ARGS = "kernel_args";
  private List<String> kernelArgs;

  public static final String JSON_PROPERTY_MEMORY_MB = "memory_mb";
  private Integer memoryMb;

  public ApiMachineGuest() {
  }

  public ApiMachineGuest cpuKind(String cpuKind) {
    
    this.cpuKind = cpuKind;
    return this;
  }

   /**
   * Get cpuKind
   * @return cpuKind
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CPU_KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCpuKind() {
    return cpuKind;
  }


  @JsonProperty(JSON_PROPERTY_CPU_KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCpuKind(String cpuKind) {
    this.cpuKind = cpuKind;
  }


  public ApiMachineGuest cpus(Integer cpus) {
    
    this.cpus = cpus;
    return this;
  }

   /**
   * Get cpus
   * @return cpus
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CPUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCpus() {
    return cpus;
  }


  @JsonProperty(JSON_PROPERTY_CPUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCpus(Integer cpus) {
    this.cpus = cpus;
  }


  public ApiMachineGuest gpuKind(String gpuKind) {
    
    this.gpuKind = gpuKind;
    return this;
  }

   /**
   * Get gpuKind
   * @return gpuKind
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_GPU_KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGpuKind() {
    return gpuKind;
  }


  @JsonProperty(JSON_PROPERTY_GPU_KIND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGpuKind(String gpuKind) {
    this.gpuKind = gpuKind;
  }


  public ApiMachineGuest gpus(Integer gpus) {
    
    this.gpus = gpus;
    return this;
  }

   /**
   * Get gpus
   * @return gpus
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_GPUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getGpus() {
    return gpus;
  }


  @JsonProperty(JSON_PROPERTY_GPUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGpus(Integer gpus) {
    this.gpus = gpus;
  }


  public ApiMachineGuest hostDedicationId(String hostDedicationId) {
    
    this.hostDedicationId = hostDedicationId;
    return this;
  }

   /**
   * Get hostDedicationId
   * @return hostDedicationId
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_HOST_DEDICATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHostDedicationId() {
    return hostDedicationId;
  }


  @JsonProperty(JSON_PROPERTY_HOST_DEDICATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHostDedicationId(String hostDedicationId) {
    this.hostDedicationId = hostDedicationId;
  }


  public ApiMachineGuest kernelArgs(List<String> kernelArgs) {
    
    this.kernelArgs = kernelArgs;
    return this;
  }

  public ApiMachineGuest addKernelArgsItem(String kernelArgsItem) {
    if (this.kernelArgs == null) {
      this.kernelArgs = new ArrayList<>();
    }
    this.kernelArgs.add(kernelArgsItem);
    return this;
  }

   /**
   * Get kernelArgs
   * @return kernelArgs
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_KERNEL_ARGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getKernelArgs() {
    return kernelArgs;
  }


  @JsonProperty(JSON_PROPERTY_KERNEL_ARGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKernelArgs(List<String> kernelArgs) {
    this.kernelArgs = kernelArgs;
  }


  public ApiMachineGuest memoryMb(Integer memoryMb) {
    
    this.memoryMb = memoryMb;
    return this;
  }

   /**
   * Get memoryMb
   * @return memoryMb
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_MEMORY_MB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMemoryMb() {
    return memoryMb;
  }


  @JsonProperty(JSON_PROPERTY_MEMORY_MB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemoryMb(Integer memoryMb) {
    this.memoryMb = memoryMb;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiMachineGuest apiMachineGuest = (ApiMachineGuest) o;
    return Objects.equals(this.cpuKind, apiMachineGuest.cpuKind) &&
        Objects.equals(this.cpus, apiMachineGuest.cpus) &&
        Objects.equals(this.gpuKind, apiMachineGuest.gpuKind) &&
        Objects.equals(this.gpus, apiMachineGuest.gpus) &&
        Objects.equals(this.hostDedicationId, apiMachineGuest.hostDedicationId) &&
        Objects.equals(this.kernelArgs, apiMachineGuest.kernelArgs) &&
        Objects.equals(this.memoryMb, apiMachineGuest.memoryMb);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpuKind, cpus, gpuKind, gpus, hostDedicationId, kernelArgs, memoryMb);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiMachineGuest {\n");
    sb.append("    cpuKind: ").append(toIndentedString(cpuKind)).append("\n");
    sb.append("    cpus: ").append(toIndentedString(cpus)).append("\n");
    sb.append("    gpuKind: ").append(toIndentedString(gpuKind)).append("\n");
    sb.append("    gpus: ").append(toIndentedString(gpus)).append("\n");
    sb.append("    hostDedicationId: ").append(toIndentedString(hostDedicationId)).append("\n");
    sb.append("    kernelArgs: ").append(toIndentedString(kernelArgs)).append("\n");
    sb.append("    memoryMb: ").append(toIndentedString(memoryMb)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

