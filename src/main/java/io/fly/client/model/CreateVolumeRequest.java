/*
 * Machines API
 * # Introduction  Fly Machines are the compute behind the Fly.io platform. They are fast-launching VMs that can be started and stopped at subsecond speeds. A Machine is the configuration and state for a single VM running on our platform. Every Machine will belong to a Fly App; Apps can have more than one Machine. Read more [here](https://fly.io/docs/machines/).  The Machines REST API allows you to provison and manage Apps, Machines and Volumes on the Fly.io platform. To manage other Fly.io resources like organizations, use the [GraphQL API](https://fly.io/docs/networking/custom-domains-with-fly/#graphql-api-notes).  ## Authentication  All requests must include the Fly API Token in the HTTP Headers as follows:  ``` Authorization: Bearer [TOKEN] ```  You can get your API token using [flyctl](https://fly.io/docs/hands-on/install-flyctl/) by running `fly auth token`  ## Base URL  The easiest (and recommended) way to connect to the Machines API is to use the public `api.machines.dev` endpoint, a simpler and more performant alternative to connecting over WireGuard. You can still access your Machines directly over a WireGuard VPN, and use the private Machines API endpoint: `http://_api.internal:4280`. This method requires more setup.  Follow the [instructions](https://fly.io/docs/networking/private-networking/#private-network-vpn) to set up a permanent WireGuard connection to your Fly.io [IPv6 private network](https://fly.io/docs/networking/private-networking/). Once youâ€™re connected, Fly internal DNS should expose the Machines API endpoint at: `http://_api.internal:4280`  ## Response Codes  The API uses conventional HTTP status codes to signal whether a request was successful or not.  Typically, 2xx HTTP status codes denote successful operations, 4xx codes imply failures related to the user, and 5xx codes suggest problems with the infrastructure.  | Status | Description                                 | | :----: | ------------------------------------------- | | `200`  | Successful request.                         | | `201`  | Created successfully.                       | | `202`  | Successful request. No content.             | | `400`  | Check that the parameters were correct.     | | `401`  | The API key used was missing or invalid.    | | `404`  | The resource was not found.                 | | `5xx`  | Indicates an error with Fly.io API servers. | 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.fly.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.fly.client.model.ApiMachineGuest;
import io.swagger.v3.oas.annotations.media.Schema;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CreateVolumeRequest
 */
@JsonPropertyOrder({
  CreateVolumeRequest.JSON_PROPERTY_COMPUTE,
  CreateVolumeRequest.JSON_PROPERTY_ENCRYPTED,
  CreateVolumeRequest.JSON_PROPERTY_FSTYPE,
  CreateVolumeRequest.JSON_PROPERTY_MACHINES_ONLY,
  CreateVolumeRequest.JSON_PROPERTY_NAME,
  CreateVolumeRequest.JSON_PROPERTY_REGION,
  CreateVolumeRequest.JSON_PROPERTY_REQUIRE_UNIQUE_ZONE,
  CreateVolumeRequest.JSON_PROPERTY_SIZE_GB,
  CreateVolumeRequest.JSON_PROPERTY_SNAPSHOT_ID,
  CreateVolumeRequest.JSON_PROPERTY_SNAPSHOT_RETENTION,
  CreateVolumeRequest.JSON_PROPERTY_SOURCE_VOLUME_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-04T04:08:18.495225938Z[Etc/UTC]")
public class CreateVolumeRequest {
  public static final String JSON_PROPERTY_COMPUTE = "compute";
  private ApiMachineGuest compute;

  public static final String JSON_PROPERTY_ENCRYPTED = "encrypted";
  private Boolean encrypted;

  public static final String JSON_PROPERTY_FSTYPE = "fstype";
  private String fstype;

  public static final String JSON_PROPERTY_MACHINES_ONLY = "machines_only";
  private Boolean machinesOnly;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_REGION = "region";
  private String region;

  public static final String JSON_PROPERTY_REQUIRE_UNIQUE_ZONE = "require_unique_zone";
  private Boolean requireUniqueZone;

  public static final String JSON_PROPERTY_SIZE_GB = "size_gb";
  private Integer sizeGb;

  public static final String JSON_PROPERTY_SNAPSHOT_ID = "snapshot_id";
  private String snapshotId;

  public static final String JSON_PROPERTY_SNAPSHOT_RETENTION = "snapshot_retention";
  private Integer snapshotRetention;

  public static final String JSON_PROPERTY_SOURCE_VOLUME_ID = "source_volume_id";
  private String sourceVolumeId;

  public CreateVolumeRequest() {
  }

  public CreateVolumeRequest compute(ApiMachineGuest compute) {
    
    this.compute = compute;
    return this;
  }

   /**
   * Get compute
   * @return compute
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_COMPUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApiMachineGuest getCompute() {
    return compute;
  }


  @JsonProperty(JSON_PROPERTY_COMPUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompute(ApiMachineGuest compute) {
    this.compute = compute;
  }


  public CreateVolumeRequest encrypted(Boolean encrypted) {
    
    this.encrypted = encrypted;
    return this;
  }

   /**
   * Get encrypted
   * @return encrypted
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ENCRYPTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEncrypted() {
    return encrypted;
  }


  @JsonProperty(JSON_PROPERTY_ENCRYPTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEncrypted(Boolean encrypted) {
    this.encrypted = encrypted;
  }


  public CreateVolumeRequest fstype(String fstype) {
    
    this.fstype = fstype;
    return this;
  }

   /**
   * Get fstype
   * @return fstype
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_FSTYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFstype() {
    return fstype;
  }


  @JsonProperty(JSON_PROPERTY_FSTYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFstype(String fstype) {
    this.fstype = fstype;
  }


  public CreateVolumeRequest machinesOnly(Boolean machinesOnly) {
    
    this.machinesOnly = machinesOnly;
    return this;
  }

   /**
   * Get machinesOnly
   * @return machinesOnly
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_MACHINES_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMachinesOnly() {
    return machinesOnly;
  }


  @JsonProperty(JSON_PROPERTY_MACHINES_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMachinesOnly(Boolean machinesOnly) {
    this.machinesOnly = machinesOnly;
  }


  public CreateVolumeRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public CreateVolumeRequest region(String region) {
    
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRegion() {
    return region;
  }


  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegion(String region) {
    this.region = region;
  }


  public CreateVolumeRequest requireUniqueZone(Boolean requireUniqueZone) {
    
    this.requireUniqueZone = requireUniqueZone;
    return this;
  }

   /**
   * Get requireUniqueZone
   * @return requireUniqueZone
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_REQUIRE_UNIQUE_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRequireUniqueZone() {
    return requireUniqueZone;
  }


  @JsonProperty(JSON_PROPERTY_REQUIRE_UNIQUE_ZONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequireUniqueZone(Boolean requireUniqueZone) {
    this.requireUniqueZone = requireUniqueZone;
  }


  public CreateVolumeRequest sizeGb(Integer sizeGb) {
    
    this.sizeGb = sizeGb;
    return this;
  }

   /**
   * Get sizeGb
   * @return sizeGb
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SIZE_GB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSizeGb() {
    return sizeGb;
  }


  @JsonProperty(JSON_PROPERTY_SIZE_GB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSizeGb(Integer sizeGb) {
    this.sizeGb = sizeGb;
  }


  public CreateVolumeRequest snapshotId(String snapshotId) {
    
    this.snapshotId = snapshotId;
    return this;
  }

   /**
   * restore from snapshot
   * @return snapshotId
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "restore from snapshot")
  @JsonProperty(JSON_PROPERTY_SNAPSHOT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSnapshotId() {
    return snapshotId;
  }


  @JsonProperty(JSON_PROPERTY_SNAPSHOT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSnapshotId(String snapshotId) {
    this.snapshotId = snapshotId;
  }


  public CreateVolumeRequest snapshotRetention(Integer snapshotRetention) {
    
    this.snapshotRetention = snapshotRetention;
    return this;
  }

   /**
   * Get snapshotRetention
   * @return snapshotRetention
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SNAPSHOT_RETENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSnapshotRetention() {
    return snapshotRetention;
  }


  @JsonProperty(JSON_PROPERTY_SNAPSHOT_RETENTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSnapshotRetention(Integer snapshotRetention) {
    this.snapshotRetention = snapshotRetention;
  }


  public CreateVolumeRequest sourceVolumeId(String sourceVolumeId) {
    
    this.sourceVolumeId = sourceVolumeId;
    return this;
  }

   /**
   * fork from remote volume
   * @return sourceVolumeId
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "fork from remote volume")
  @JsonProperty(JSON_PROPERTY_SOURCE_VOLUME_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSourceVolumeId() {
    return sourceVolumeId;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_VOLUME_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceVolumeId(String sourceVolumeId) {
    this.sourceVolumeId = sourceVolumeId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateVolumeRequest createVolumeRequest = (CreateVolumeRequest) o;
    return Objects.equals(this.compute, createVolumeRequest.compute) &&
        Objects.equals(this.encrypted, createVolumeRequest.encrypted) &&
        Objects.equals(this.fstype, createVolumeRequest.fstype) &&
        Objects.equals(this.machinesOnly, createVolumeRequest.machinesOnly) &&
        Objects.equals(this.name, createVolumeRequest.name) &&
        Objects.equals(this.region, createVolumeRequest.region) &&
        Objects.equals(this.requireUniqueZone, createVolumeRequest.requireUniqueZone) &&
        Objects.equals(this.sizeGb, createVolumeRequest.sizeGb) &&
        Objects.equals(this.snapshotId, createVolumeRequest.snapshotId) &&
        Objects.equals(this.snapshotRetention, createVolumeRequest.snapshotRetention) &&
        Objects.equals(this.sourceVolumeId, createVolumeRequest.sourceVolumeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(compute, encrypted, fstype, machinesOnly, name, region, requireUniqueZone, sizeGb, snapshotId, snapshotRetention, sourceVolumeId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateVolumeRequest {\n");
    sb.append("    compute: ").append(toIndentedString(compute)).append("\n");
    sb.append("    encrypted: ").append(toIndentedString(encrypted)).append("\n");
    sb.append("    fstype: ").append(toIndentedString(fstype)).append("\n");
    sb.append("    machinesOnly: ").append(toIndentedString(machinesOnly)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    requireUniqueZone: ").append(toIndentedString(requireUniqueZone)).append("\n");
    sb.append("    sizeGb: ").append(toIndentedString(sizeGb)).append("\n");
    sb.append("    snapshotId: ").append(toIndentedString(snapshotId)).append("\n");
    sb.append("    snapshotRetention: ").append(toIndentedString(snapshotRetention)).append("\n");
    sb.append("    sourceVolumeId: ").append(toIndentedString(sourceVolumeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

