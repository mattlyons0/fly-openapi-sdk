/*
 * Machines API
 * # Introduction  Fly Machines are the compute behind the Fly.io platform. They are fast-launching VMs that can be started and stopped at subsecond speeds. A Machine is the configuration and state for a single VM running on our platform. Every Machine will belong to a Fly App; Apps can have more than one Machine. Read more [here](https://fly.io/docs/machines/).  The Machines REST API allows you to provison and manage Apps, Machines and Volumes on the Fly.io platform. To manage other Fly.io resources like organizations, use the [GraphQL API](https://fly.io/docs/networking/custom-domains-with-fly/#graphql-api-notes).  ## Authentication  All requests must include the Fly API Token in the HTTP Headers as follows:  ``` Authorization: Bearer [TOKEN] ```  You can get your API token using [flyctl](https://fly.io/docs/hands-on/install-flyctl/) by running `fly auth token`  ## Base URL  The easiest (and recommended) way to connect to the Machines API is to use the public `api.machines.dev` endpoint, a simpler and more performant alternative to connecting over WireGuard. You can still access your Machines directly over a WireGuard VPN, and use the private Machines API endpoint: `http://_api.internal:4280`. This method requires more setup.  Follow the [instructions](https://fly.io/docs/networking/private-networking/#private-network-vpn) to set up a permanent WireGuard connection to your Fly.io [IPv6 private network](https://fly.io/docs/networking/private-networking/). Once youâ€™re connected, Fly internal DNS should expose the Machines API endpoint at: `http://_api.internal:4280`  ## Response Codes  The API uses conventional HTTP status codes to signal whether a request was successful or not.  Typically, 2xx HTTP status codes denote successful operations, 4xx codes imply failures related to the user, and 5xx codes suggest problems with the infrastructure.  | Status | Description                                 | | :----: | ------------------------------------------- | | `200`  | Successful request.                         | | `201`  | Created successfully.                       | | `202`  | Successful request. No content.             | | `400`  | Check that the parameters were correct.     | | `401`  | The API key used was missing or invalid.    | | `404`  | The resource was not found.                 | | `5xx`  | Indicates an error with Fly.io API servers. | 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.fly.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.fly.client.model.ApiMachineConfig;
import io.swagger.v3.oas.annotations.media.Schema;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UpdateMachineRequest
 */
@JsonPropertyOrder({
  UpdateMachineRequest.JSON_PROPERTY_CONFIG,
  UpdateMachineRequest.JSON_PROPERTY_CURRENT_VERSION,
  UpdateMachineRequest.JSON_PROPERTY_LEASE_TTL,
  UpdateMachineRequest.JSON_PROPERTY_LSVD,
  UpdateMachineRequest.JSON_PROPERTY_NAME,
  UpdateMachineRequest.JSON_PROPERTY_REGION,
  UpdateMachineRequest.JSON_PROPERTY_SKIP_LAUNCH,
  UpdateMachineRequest.JSON_PROPERTY_SKIP_SERVICE_REGISTRATION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UpdateMachineRequest {
  public static final String JSON_PROPERTY_CONFIG = "config";
  private ApiMachineConfig config;

  public static final String JSON_PROPERTY_CURRENT_VERSION = "current_version";
  private String currentVersion;

  public static final String JSON_PROPERTY_LEASE_TTL = "lease_ttl";
  private Long leaseTtl;

  public static final String JSON_PROPERTY_LSVD = "lsvd";
  private Boolean lsvd;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_REGION = "region";
  private String region;

  public static final String JSON_PROPERTY_SKIP_LAUNCH = "skip_launch";
  private Boolean skipLaunch;

  public static final String JSON_PROPERTY_SKIP_SERVICE_REGISTRATION = "skip_service_registration";
  private Boolean skipServiceRegistration;

  public UpdateMachineRequest() {
  }

  public UpdateMachineRequest config(ApiMachineConfig config) {
    
    this.config = config;
    return this;
  }

   /**
   * An object defining the Machine configuration
   * @return config
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "An object defining the Machine configuration")
  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApiMachineConfig getConfig() {
    return config;
  }


  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfig(ApiMachineConfig config) {
    this.config = config;
  }


  public UpdateMachineRequest currentVersion(String currentVersion) {
    
    this.currentVersion = currentVersion;
    return this;
  }

   /**
   * Get currentVersion
   * @return currentVersion
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CURRENT_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrentVersion() {
    return currentVersion;
  }


  @JsonProperty(JSON_PROPERTY_CURRENT_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrentVersion(String currentVersion) {
    this.currentVersion = currentVersion;
  }


  public UpdateMachineRequest leaseTtl(Long leaseTtl) {
    
    this.leaseTtl = leaseTtl;
    return this;
  }

   /**
   * Get leaseTtl
   * @return leaseTtl
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LEASE_TTL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLeaseTtl() {
    return leaseTtl;
  }


  @JsonProperty(JSON_PROPERTY_LEASE_TTL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLeaseTtl(Long leaseTtl) {
    this.leaseTtl = leaseTtl;
  }


  public UpdateMachineRequest lsvd(Boolean lsvd) {
    
    this.lsvd = lsvd;
    return this;
  }

   /**
   * Get lsvd
   * @return lsvd
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LSVD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLsvd() {
    return lsvd;
  }


  @JsonProperty(JSON_PROPERTY_LSVD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLsvd(Boolean lsvd) {
    this.lsvd = lsvd;
  }


  public UpdateMachineRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Unique name for this Machine. If omitted, one is generated for you
   * @return name
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Unique name for this Machine. If omitted, one is generated for you")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public UpdateMachineRequest region(String region) {
    
    this.region = region;
    return this;
  }

   /**
   * The target region. Omitting this param launches in the same region as your WireGuard peer connection (somewhere near you).
   * @return region
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The target region. Omitting this param launches in the same region as your WireGuard peer connection (somewhere near you).")
  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRegion() {
    return region;
  }


  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegion(String region) {
    this.region = region;
  }


  public UpdateMachineRequest skipLaunch(Boolean skipLaunch) {
    
    this.skipLaunch = skipLaunch;
    return this;
  }

   /**
   * Get skipLaunch
   * @return skipLaunch
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SKIP_LAUNCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSkipLaunch() {
    return skipLaunch;
  }


  @JsonProperty(JSON_PROPERTY_SKIP_LAUNCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSkipLaunch(Boolean skipLaunch) {
    this.skipLaunch = skipLaunch;
  }


  public UpdateMachineRequest skipServiceRegistration(Boolean skipServiceRegistration) {
    
    this.skipServiceRegistration = skipServiceRegistration;
    return this;
  }

   /**
   * Get skipServiceRegistration
   * @return skipServiceRegistration
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SKIP_SERVICE_REGISTRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSkipServiceRegistration() {
    return skipServiceRegistration;
  }


  @JsonProperty(JSON_PROPERTY_SKIP_SERVICE_REGISTRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSkipServiceRegistration(Boolean skipServiceRegistration) {
    this.skipServiceRegistration = skipServiceRegistration;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateMachineRequest updateMachineRequest = (UpdateMachineRequest) o;
    return Objects.equals(this.config, updateMachineRequest.config) &&
        Objects.equals(this.currentVersion, updateMachineRequest.currentVersion) &&
        Objects.equals(this.leaseTtl, updateMachineRequest.leaseTtl) &&
        Objects.equals(this.lsvd, updateMachineRequest.lsvd) &&
        Objects.equals(this.name, updateMachineRequest.name) &&
        Objects.equals(this.region, updateMachineRequest.region) &&
        Objects.equals(this.skipLaunch, updateMachineRequest.skipLaunch) &&
        Objects.equals(this.skipServiceRegistration, updateMachineRequest.skipServiceRegistration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(config, currentVersion, leaseTtl, lsvd, name, region, skipLaunch, skipServiceRegistration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateMachineRequest {\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    currentVersion: ").append(toIndentedString(currentVersion)).append("\n");
    sb.append("    leaseTtl: ").append(toIndentedString(leaseTtl)).append("\n");
    sb.append("    lsvd: ").append(toIndentedString(lsvd)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    skipLaunch: ").append(toIndentedString(skipLaunch)).append("\n");
    sb.append("    skipServiceRegistration: ").append(toIndentedString(skipServiceRegistration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

