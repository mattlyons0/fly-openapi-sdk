# coding: utf-8

"""
    Machines API

    # Introduction  Fly Machines are the compute behind the Fly.io platform. They are fast-launching VMs that can be started and stopped at subsecond speeds. A Machine is the configuration and state for a single VM running on our platform. Every Machine will belong to a Fly App; Apps can have more than one Machine. Read more [here](https://fly.io/docs/machines/).  The Machines REST API allows you to provison and manage Apps, Machines and Volumes on the Fly.io platform. To manage other Fly.io resources like organizations, use the [GraphQL API](https://fly.io/docs/networking/custom-domains-with-fly/#graphql-api-notes).  ## Authentication  All requests must include the Fly API Token in the HTTP Headers as follows:  ``` Authorization: Bearer [TOKEN] ```  You can get your API token using [flyctl](https://fly.io/docs/hands-on/install-flyctl/) by running `fly auth token`  ## Base URL  The easiest (and recommended) way to connect to the Machines API is to use the public `api.machines.dev` endpoint, a simpler and more performant alternative to connecting over WireGuard. You can still access your Machines directly over a WireGuard VPN, and use the private Machines API endpoint: `http://_api.internal:4280`. This method requires more setup.  Follow the [instructions](https://fly.io/docs/networking/private-networking/#private-network-vpn) to set up a permanent WireGuard connection to your Fly.io [IPv6 private network](https://fly.io/docs/networking/private-networking/). Once youâ€™re connected, Fly internal DNS should expose the Machines API endpoint at: `http://_api.internal:4280`  ## Response Codes  The API uses conventional HTTP status codes to signal whether a request was successful or not.  Typically, 2xx HTTP status codes denote successful operations, 4xx codes imply failures related to the user, and 5xx codes suggest problems with the infrastructure.  | Status | Description                                 | | :----: | ------------------------------------------- | | `200`  | Successful request.                         | | `201`  | Created successfully.                       | | `202`  | Successful request. No content.             | | `400`  | Check that the parameters were correct.     | | `401`  | The API key used was missing or invalid.    | | `404`  | The resource was not found.                 | | `5xx`  | Indicates an error with Fly.io API servers. | 

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from fly_sdk.api.machines_api import MachinesApi


class TestMachinesApi(unittest.TestCase):
    """MachinesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = MachinesApi()

    def tearDown(self) -> None:
        pass

    def test_machines_cordon(self) -> None:
        """Test case for machines_cordon

        Cordon Machine
        """
        pass

    def test_machines_create(self) -> None:
        """Test case for machines_create

        Create Machine
        """
        pass

    def test_machines_create_lease(self) -> None:
        """Test case for machines_create_lease

        Create Lease
        """
        pass

    def test_machines_delete(self) -> None:
        """Test case for machines_delete

        Destroy Machine
        """
        pass

    def test_machines_delete_metadata(self) -> None:
        """Test case for machines_delete_metadata

        Delete Metadata
        """
        pass

    def test_machines_exec(self) -> None:
        """Test case for machines_exec

        Execute Command
        """
        pass

    def test_machines_list(self) -> None:
        """Test case for machines_list

        List Machines
        """
        pass

    def test_machines_list_events(self) -> None:
        """Test case for machines_list_events

        List Events
        """
        pass

    def test_machines_list_processes(self) -> None:
        """Test case for machines_list_processes

        List Processes
        """
        pass

    def test_machines_list_versions(self) -> None:
        """Test case for machines_list_versions

        List Versions
        """
        pass

    def test_machines_release_lease(self) -> None:
        """Test case for machines_release_lease

        Release Lease
        """
        pass

    def test_machines_restart(self) -> None:
        """Test case for machines_restart

        Restart Machine
        """
        pass

    def test_machines_show(self) -> None:
        """Test case for machines_show

        Get Machine
        """
        pass

    def test_machines_show_lease(self) -> None:
        """Test case for machines_show_lease

        Get Lease
        """
        pass

    def test_machines_show_metadata(self) -> None:
        """Test case for machines_show_metadata

        Get Metadata
        """
        pass

    def test_machines_signal(self) -> None:
        """Test case for machines_signal

        Signal Machine
        """
        pass

    def test_machines_start(self) -> None:
        """Test case for machines_start

        Start Machine
        """
        pass

    def test_machines_stop(self) -> None:
        """Test case for machines_stop

        Stop Machine
        """
        pass

    def test_machines_uncordon(self) -> None:
        """Test case for machines_uncordon

        Uncordon Machine
        """
        pass

    def test_machines_update(self) -> None:
        """Test case for machines_update

        Update Machine
        """
        pass

    def test_machines_update_metadata(self) -> None:
        """Test case for machines_update_metadata

        Update Metadata
        """
        pass

    def test_machines_wait(self) -> None:
        """Test case for machines_wait

        Wait for State
        """
        pass


if __name__ == '__main__':
    unittest.main()
