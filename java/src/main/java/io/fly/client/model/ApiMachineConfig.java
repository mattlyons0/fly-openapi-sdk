/*
 * Machines API
 * # Introduction  Fly Machines are the compute behind the Fly.io platform. They are fast-launching VMs that can be started and stopped at subsecond speeds. A Machine is the configuration and state for a single VM running on our platform. Every Machine will belong to a Fly App; Apps can have more than one Machine. Read more [here](https://fly.io/docs/machines/).  The Machines REST API allows you to provison and manage Apps, Machines and Volumes on the Fly.io platform. To manage other Fly.io resources like organizations, use the [GraphQL API](https://fly.io/docs/networking/custom-domains-with-fly/#graphql-api-notes).  ## Authentication  All requests must include the Fly API Token in the HTTP Headers as follows:  ``` Authorization: Bearer [TOKEN] ```  You can get your API token using [flyctl](https://fly.io/docs/hands-on/install-flyctl/) by running `fly auth token`  ## Base URL  The easiest (and recommended) way to connect to the Machines API is to use the public `api.machines.dev` endpoint, a simpler and more performant alternative to connecting over WireGuard. You can still access your Machines directly over a WireGuard VPN, and use the private Machines API endpoint: `http://_api.internal:4280`. This method requires more setup.  Follow the [instructions](https://fly.io/docs/networking/private-networking/#private-network-vpn) to set up a permanent WireGuard connection to your Fly.io [IPv6 private network](https://fly.io/docs/networking/private-networking/). Once you’re connected, Fly internal DNS should expose the Machines API endpoint at: `http://_api.internal:4280`  ## Response Codes  The API uses conventional HTTP status codes to signal whether a request was successful or not.  Typically, 2xx HTTP status codes denote successful operations, 4xx codes imply failures related to the user, and 5xx codes suggest problems with the infrastructure.  | Status | Description                                 | | :----: | ------------------------------------------- | | `200`  | Successful request.                         | | `201`  | Created successfully.                       | | `202`  | Successful request. No content.             | | `400`  | Check that the parameters were correct.     | | `401`  | The API key used was missing or invalid.    | | `404`  | The resource was not found.                 | | `5xx`  | Indicates an error with Fly.io API servers. | 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.fly.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.fly.client.model.ApiDNSConfig;
import io.fly.client.model.ApiFile;
import io.fly.client.model.ApiMachineCheck;
import io.fly.client.model.ApiMachineGuest;
import io.fly.client.model.ApiMachineInit;
import io.fly.client.model.ApiMachineMetrics;
import io.fly.client.model.ApiMachineMount;
import io.fly.client.model.ApiMachineProcess;
import io.fly.client.model.ApiMachineRestart;
import io.fly.client.model.ApiMachineService;
import io.fly.client.model.ApiStatic;
import io.fly.client.model.ApiStopConfig;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ApiMachineConfig
 */
@JsonPropertyOrder({
  ApiMachineConfig.JSON_PROPERTY_AUTO_DESTROY,
  ApiMachineConfig.JSON_PROPERTY_CHECKS,
  ApiMachineConfig.JSON_PROPERTY_DISABLE_MACHINE_AUTOSTART,
  ApiMachineConfig.JSON_PROPERTY_DNS,
  ApiMachineConfig.JSON_PROPERTY_ENV,
  ApiMachineConfig.JSON_PROPERTY_FILES,
  ApiMachineConfig.JSON_PROPERTY_GUEST,
  ApiMachineConfig.JSON_PROPERTY_IMAGE,
  ApiMachineConfig.JSON_PROPERTY_INIT,
  ApiMachineConfig.JSON_PROPERTY_METADATA,
  ApiMachineConfig.JSON_PROPERTY_METRICS,
  ApiMachineConfig.JSON_PROPERTY_MOUNTS,
  ApiMachineConfig.JSON_PROPERTY_PROCESSES,
  ApiMachineConfig.JSON_PROPERTY_RESTART,
  ApiMachineConfig.JSON_PROPERTY_SCHEDULE,
  ApiMachineConfig.JSON_PROPERTY_SERVICES,
  ApiMachineConfig.JSON_PROPERTY_SIZE,
  ApiMachineConfig.JSON_PROPERTY_STANDBYS,
  ApiMachineConfig.JSON_PROPERTY_STATICS,
  ApiMachineConfig.JSON_PROPERTY_STOP_CONFIG
})
@JsonTypeName("api.MachineConfig")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-04T03:51:46.085129836Z[Etc/UTC]")
public class ApiMachineConfig {
  public static final String JSON_PROPERTY_AUTO_DESTROY = "auto_destroy";
  private Boolean autoDestroy;

  public static final String JSON_PROPERTY_CHECKS = "checks";
  private Map<String, ApiMachineCheck> checks = new HashMap<>();

  public static final String JSON_PROPERTY_DISABLE_MACHINE_AUTOSTART = "disable_machine_autostart";
  private Boolean disableMachineAutostart;

  public static final String JSON_PROPERTY_DNS = "dns";
  private ApiDNSConfig dns;

  public static final String JSON_PROPERTY_ENV = "env";
  private Map<String, String> env = new HashMap<>();

  public static final String JSON_PROPERTY_FILES = "files";
  private List<ApiFile> files;

  public static final String JSON_PROPERTY_GUEST = "guest";
  private ApiMachineGuest guest;

  public static final String JSON_PROPERTY_IMAGE = "image";
  private String image;

  public static final String JSON_PROPERTY_INIT = "init";
  private ApiMachineInit init;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private Map<String, String> metadata = new HashMap<>();

  public static final String JSON_PROPERTY_METRICS = "metrics";
  private ApiMachineMetrics metrics;

  public static final String JSON_PROPERTY_MOUNTS = "mounts";
  private List<ApiMachineMount> mounts;

  public static final String JSON_PROPERTY_PROCESSES = "processes";
  private List<ApiMachineProcess> processes;

  public static final String JSON_PROPERTY_RESTART = "restart";
  private ApiMachineRestart restart;

  public static final String JSON_PROPERTY_SCHEDULE = "schedule";
  private String schedule;

  public static final String JSON_PROPERTY_SERVICES = "services";
  private List<ApiMachineService> services;

  public static final String JSON_PROPERTY_SIZE = "size";
  private String size;

  public static final String JSON_PROPERTY_STANDBYS = "standbys";
  private List<String> standbys;

  public static final String JSON_PROPERTY_STATICS = "statics";
  private List<ApiStatic> statics;

  public static final String JSON_PROPERTY_STOP_CONFIG = "stop_config";
  private ApiStopConfig stopConfig;

  public ApiMachineConfig() {
  }

  public ApiMachineConfig autoDestroy(Boolean autoDestroy) {
    
    this.autoDestroy = autoDestroy;
    return this;
  }

   /**
   * Optional boolean telling the Machine to destroy itself once it’s complete (default false)
   * @return autoDestroy
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Optional boolean telling the Machine to destroy itself once it’s complete (default false)")
  @JsonProperty(JSON_PROPERTY_AUTO_DESTROY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAutoDestroy() {
    return autoDestroy;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_DESTROY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoDestroy(Boolean autoDestroy) {
    this.autoDestroy = autoDestroy;
  }


  public ApiMachineConfig checks(Map<String, ApiMachineCheck> checks) {
    
    this.checks = checks;
    return this;
  }

  public ApiMachineConfig putChecksItem(String key, ApiMachineCheck checksItem) {
    if (this.checks == null) {
      this.checks = new HashMap<>();
    }
    this.checks.put(key, checksItem);
    return this;
  }

   /**
   * Get checks
   * @return checks
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CHECKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, ApiMachineCheck> getChecks() {
    return checks;
  }


  @JsonProperty(JSON_PROPERTY_CHECKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChecks(Map<String, ApiMachineCheck> checks) {
    this.checks = checks;
  }


  public ApiMachineConfig disableMachineAutostart(Boolean disableMachineAutostart) {
    
    this.disableMachineAutostart = disableMachineAutostart;
    return this;
  }

   /**
   * Deprecated: use Service.Autostart instead
   * @return disableMachineAutostart
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Deprecated: use Service.Autostart instead")
  @JsonProperty(JSON_PROPERTY_DISABLE_MACHINE_AUTOSTART)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisableMachineAutostart() {
    return disableMachineAutostart;
  }


  @JsonProperty(JSON_PROPERTY_DISABLE_MACHINE_AUTOSTART)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisableMachineAutostart(Boolean disableMachineAutostart) {
    this.disableMachineAutostart = disableMachineAutostart;
  }


  public ApiMachineConfig dns(ApiDNSConfig dns) {
    
    this.dns = dns;
    return this;
  }

   /**
   * Get dns
   * @return dns
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApiDNSConfig getDns() {
    return dns;
  }


  @JsonProperty(JSON_PROPERTY_DNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDns(ApiDNSConfig dns) {
    this.dns = dns;
  }


  public ApiMachineConfig env(Map<String, String> env) {
    
    this.env = env;
    return this;
  }

  public ApiMachineConfig putEnvItem(String key, String envItem) {
    if (this.env == null) {
      this.env = new HashMap<>();
    }
    this.env.put(key, envItem);
    return this;
  }

   /**
   * An object filled with key/value pairs to be set as environment variables
   * @return env
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "An object filled with key/value pairs to be set as environment variables")
  @JsonProperty(JSON_PROPERTY_ENV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getEnv() {
    return env;
  }


  @JsonProperty(JSON_PROPERTY_ENV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnv(Map<String, String> env) {
    this.env = env;
  }


  public ApiMachineConfig files(List<ApiFile> files) {
    
    this.files = files;
    return this;
  }

  public ApiMachineConfig addFilesItem(ApiFile filesItem) {
    if (this.files == null) {
      this.files = new ArrayList<>();
    }
    this.files.add(filesItem);
    return this;
  }

   /**
   * Get files
   * @return files
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_FILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ApiFile> getFiles() {
    return files;
  }


  @JsonProperty(JSON_PROPERTY_FILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFiles(List<ApiFile> files) {
    this.files = files;
  }


  public ApiMachineConfig guest(ApiMachineGuest guest) {
    
    this.guest = guest;
    return this;
  }

   /**
   * Get guest
   * @return guest
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_GUEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApiMachineGuest getGuest() {
    return guest;
  }


  @JsonProperty(JSON_PROPERTY_GUEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGuest(ApiMachineGuest guest) {
    this.guest = guest;
  }


  public ApiMachineConfig image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * The docker image to run
   * @return image
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The docker image to run")
  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImage() {
    return image;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImage(String image) {
    this.image = image;
  }


  public ApiMachineConfig init(ApiMachineInit init) {
    
    this.init = init;
    return this;
  }

   /**
   * Get init
   * @return init
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_INIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApiMachineInit getInit() {
    return init;
  }


  @JsonProperty(JSON_PROPERTY_INIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInit(ApiMachineInit init) {
    this.init = init;
  }


  public ApiMachineConfig metadata(Map<String, String> metadata) {
    
    this.metadata = metadata;
    return this;
  }

  public ApiMachineConfig putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }


  public ApiMachineConfig metrics(ApiMachineMetrics metrics) {
    
    this.metrics = metrics;
    return this;
  }

   /**
   * Get metrics
   * @return metrics
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_METRICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApiMachineMetrics getMetrics() {
    return metrics;
  }


  @JsonProperty(JSON_PROPERTY_METRICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetrics(ApiMachineMetrics metrics) {
    this.metrics = metrics;
  }


  public ApiMachineConfig mounts(List<ApiMachineMount> mounts) {
    
    this.mounts = mounts;
    return this;
  }

  public ApiMachineConfig addMountsItem(ApiMachineMount mountsItem) {
    if (this.mounts == null) {
      this.mounts = new ArrayList<>();
    }
    this.mounts.add(mountsItem);
    return this;
  }

   /**
   * Get mounts
   * @return mounts
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_MOUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ApiMachineMount> getMounts() {
    return mounts;
  }


  @JsonProperty(JSON_PROPERTY_MOUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMounts(List<ApiMachineMount> mounts) {
    this.mounts = mounts;
  }


  public ApiMachineConfig processes(List<ApiMachineProcess> processes) {
    
    this.processes = processes;
    return this;
  }

  public ApiMachineConfig addProcessesItem(ApiMachineProcess processesItem) {
    if (this.processes == null) {
      this.processes = new ArrayList<>();
    }
    this.processes.add(processesItem);
    return this;
  }

   /**
   * Get processes
   * @return processes
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PROCESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ApiMachineProcess> getProcesses() {
    return processes;
  }


  @JsonProperty(JSON_PROPERTY_PROCESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcesses(List<ApiMachineProcess> processes) {
    this.processes = processes;
  }


  public ApiMachineConfig restart(ApiMachineRestart restart) {
    
    this.restart = restart;
    return this;
  }

   /**
   * Get restart
   * @return restart
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_RESTART)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApiMachineRestart getRestart() {
    return restart;
  }


  @JsonProperty(JSON_PROPERTY_RESTART)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRestart(ApiMachineRestart restart) {
    this.restart = restart;
  }


  public ApiMachineConfig schedule(String schedule) {
    
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SCHEDULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSchedule() {
    return schedule;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }


  public ApiMachineConfig services(List<ApiMachineService> services) {
    
    this.services = services;
    return this;
  }

  public ApiMachineConfig addServicesItem(ApiMachineService servicesItem) {
    if (this.services == null) {
      this.services = new ArrayList<>();
    }
    this.services.add(servicesItem);
    return this;
  }

   /**
   * Get services
   * @return services
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ApiMachineService> getServices() {
    return services;
  }


  @JsonProperty(JSON_PROPERTY_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServices(List<ApiMachineService> services) {
    this.services = services;
  }


  public ApiMachineConfig size(String size) {
    
    this.size = size;
    return this;
  }

   /**
   * Deprecated: use Guest instead
   * @return size
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Deprecated: use Guest instead")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSize(String size) {
    this.size = size;
  }


  public ApiMachineConfig standbys(List<String> standbys) {
    
    this.standbys = standbys;
    return this;
  }

  public ApiMachineConfig addStandbysItem(String standbysItem) {
    if (this.standbys == null) {
      this.standbys = new ArrayList<>();
    }
    this.standbys.add(standbysItem);
    return this;
  }

   /**
   * Standbys enable a machine to be a standby for another. In the event of a hardware failure, the standby machine will be started.
   * @return standbys
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Standbys enable a machine to be a standby for another. In the event of a hardware failure, the standby machine will be started.")
  @JsonProperty(JSON_PROPERTY_STANDBYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getStandbys() {
    return standbys;
  }


  @JsonProperty(JSON_PROPERTY_STANDBYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStandbys(List<String> standbys) {
    this.standbys = standbys;
  }


  public ApiMachineConfig statics(List<ApiStatic> statics) {
    
    this.statics = statics;
    return this;
  }

  public ApiMachineConfig addStaticsItem(ApiStatic staticsItem) {
    if (this.statics == null) {
      this.statics = new ArrayList<>();
    }
    this.statics.add(staticsItem);
    return this;
  }

   /**
   * Get statics
   * @return statics
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_STATICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ApiStatic> getStatics() {
    return statics;
  }


  @JsonProperty(JSON_PROPERTY_STATICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatics(List<ApiStatic> statics) {
    this.statics = statics;
  }


  public ApiMachineConfig stopConfig(ApiStopConfig stopConfig) {
    
    this.stopConfig = stopConfig;
    return this;
  }

   /**
   * Get stopConfig
   * @return stopConfig
  **/
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_STOP_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ApiStopConfig getStopConfig() {
    return stopConfig;
  }


  @JsonProperty(JSON_PROPERTY_STOP_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStopConfig(ApiStopConfig stopConfig) {
    this.stopConfig = stopConfig;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiMachineConfig apiMachineConfig = (ApiMachineConfig) o;
    return Objects.equals(this.autoDestroy, apiMachineConfig.autoDestroy) &&
        Objects.equals(this.checks, apiMachineConfig.checks) &&
        Objects.equals(this.disableMachineAutostart, apiMachineConfig.disableMachineAutostart) &&
        Objects.equals(this.dns, apiMachineConfig.dns) &&
        Objects.equals(this.env, apiMachineConfig.env) &&
        Objects.equals(this.files, apiMachineConfig.files) &&
        Objects.equals(this.guest, apiMachineConfig.guest) &&
        Objects.equals(this.image, apiMachineConfig.image) &&
        Objects.equals(this.init, apiMachineConfig.init) &&
        Objects.equals(this.metadata, apiMachineConfig.metadata) &&
        Objects.equals(this.metrics, apiMachineConfig.metrics) &&
        Objects.equals(this.mounts, apiMachineConfig.mounts) &&
        Objects.equals(this.processes, apiMachineConfig.processes) &&
        Objects.equals(this.restart, apiMachineConfig.restart) &&
        Objects.equals(this.schedule, apiMachineConfig.schedule) &&
        Objects.equals(this.services, apiMachineConfig.services) &&
        Objects.equals(this.size, apiMachineConfig.size) &&
        Objects.equals(this.standbys, apiMachineConfig.standbys) &&
        Objects.equals(this.statics, apiMachineConfig.statics) &&
        Objects.equals(this.stopConfig, apiMachineConfig.stopConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoDestroy, checks, disableMachineAutostart, dns, env, files, guest, image, init, metadata, metrics, mounts, processes, restart, schedule, services, size, standbys, statics, stopConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiMachineConfig {\n");
    sb.append("    autoDestroy: ").append(toIndentedString(autoDestroy)).append("\n");
    sb.append("    checks: ").append(toIndentedString(checks)).append("\n");
    sb.append("    disableMachineAutostart: ").append(toIndentedString(disableMachineAutostart)).append("\n");
    sb.append("    dns: ").append(toIndentedString(dns)).append("\n");
    sb.append("    env: ").append(toIndentedString(env)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("    guest: ").append(toIndentedString(guest)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    init: ").append(toIndentedString(init)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    mounts: ").append(toIndentedString(mounts)).append("\n");
    sb.append("    processes: ").append(toIndentedString(processes)).append("\n");
    sb.append("    restart: ").append(toIndentedString(restart)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    standbys: ").append(toIndentedString(standbys)).append("\n");
    sb.append("    statics: ").append(toIndentedString(statics)).append("\n");
    sb.append("    stopConfig: ").append(toIndentedString(stopConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

