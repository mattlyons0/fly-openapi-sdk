/*
Machines API

# Introduction  Fly Machines are the compute behind the Fly.io platform. They are fast-launching VMs that can be started and stopped at subsecond speeds. A Machine is the configuration and state for a single VM running on our platform. Every Machine will belong to a Fly App; Apps can have more than one Machine. Read more [here](https://fly.io/docs/machines/).  The Machines REST API allows you to provison and manage Apps, Machines and Volumes on the Fly.io platform. To manage other Fly.io resources like organizations, use the [GraphQL API](https://fly.io/docs/networking/custom-domains-with-fly/#graphql-api-notes).  ## Authentication  All requests must include the Fly API Token in the HTTP Headers as follows:  ``` Authorization: Bearer [TOKEN] ```  You can get your API token using [flyctl](https://fly.io/docs/hands-on/install-flyctl/) by running `fly auth token`  ## Base URL  The easiest (and recommended) way to connect to the Machines API is to use the public `api.machines.dev` endpoint, a simpler and more performant alternative to connecting over WireGuard. You can still access your Machines directly over a WireGuard VPN, and use the private Machines API endpoint: `http://_api.internal:4280`. This method requires more setup.  Follow the [instructions](https://fly.io/docs/networking/private-networking/#private-network-vpn) to set up a permanent WireGuard connection to your Fly.io [IPv6 private network](https://fly.io/docs/networking/private-networking/). Once youâ€™re connected, Fly internal DNS should expose the Machines API endpoint at: `http://_api.internal:4280`  ## Response Codes  The API uses conventional HTTP status codes to signal whether a request was successful or not.  Typically, 2xx HTTP status codes denote successful operations, 4xx codes imply failures related to the user, and 5xx codes suggest problems with the infrastructure.  | Status | Description                                 | | :----: | ------------------------------------------- | | `200`  | Successful request.                         | | `201`  | Created successfully.                       | | `202`  | Successful request. No content.             | | `400`  | Check that the parameters were correct.     | | `401`  | The API key used was missing or invalid.    | | `404`  | The resource was not found.                 | | `5xx`  | Indicates an error with Fly.io API servers. | 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fly-sdk

import (
	"encoding/json"
)

// checks if the ApiMachineMount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiMachineMount{}

// ApiMachineMount struct for ApiMachineMount
type ApiMachineMount struct {
	AddSizeGb *int32 `json:"add_size_gb,omitempty"`
	Encrypted *bool `json:"encrypted,omitempty"`
	ExtendThresholdPercent *int32 `json:"extend_threshold_percent,omitempty"`
	Name *string `json:"name,omitempty"`
	Path *string `json:"path,omitempty"`
	SizeGb *int32 `json:"size_gb,omitempty"`
	SizeGbLimit *int32 `json:"size_gb_limit,omitempty"`
	Volume *string `json:"volume,omitempty"`
}

// NewApiMachineMount instantiates a new ApiMachineMount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiMachineMount() *ApiMachineMount {
	this := ApiMachineMount{}
	return &this
}

// NewApiMachineMountWithDefaults instantiates a new ApiMachineMount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiMachineMountWithDefaults() *ApiMachineMount {
	this := ApiMachineMount{}
	return &this
}

// GetAddSizeGb returns the AddSizeGb field value if set, zero value otherwise.
func (o *ApiMachineMount) GetAddSizeGb() int32 {
	if o == nil || IsNil(o.AddSizeGb) {
		var ret int32
		return ret
	}
	return *o.AddSizeGb
}

// GetAddSizeGbOk returns a tuple with the AddSizeGb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineMount) GetAddSizeGbOk() (*int32, bool) {
	if o == nil || IsNil(o.AddSizeGb) {
		return nil, false
	}
	return o.AddSizeGb, true
}

// HasAddSizeGb returns a boolean if a field has been set.
func (o *ApiMachineMount) HasAddSizeGb() bool {
	if o != nil && !IsNil(o.AddSizeGb) {
		return true
	}

	return false
}

// SetAddSizeGb gets a reference to the given int32 and assigns it to the AddSizeGb field.
func (o *ApiMachineMount) SetAddSizeGb(v int32) {
	o.AddSizeGb = &v
}

// GetEncrypted returns the Encrypted field value if set, zero value otherwise.
func (o *ApiMachineMount) GetEncrypted() bool {
	if o == nil || IsNil(o.Encrypted) {
		var ret bool
		return ret
	}
	return *o.Encrypted
}

// GetEncryptedOk returns a tuple with the Encrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineMount) GetEncryptedOk() (*bool, bool) {
	if o == nil || IsNil(o.Encrypted) {
		return nil, false
	}
	return o.Encrypted, true
}

// HasEncrypted returns a boolean if a field has been set.
func (o *ApiMachineMount) HasEncrypted() bool {
	if o != nil && !IsNil(o.Encrypted) {
		return true
	}

	return false
}

// SetEncrypted gets a reference to the given bool and assigns it to the Encrypted field.
func (o *ApiMachineMount) SetEncrypted(v bool) {
	o.Encrypted = &v
}

// GetExtendThresholdPercent returns the ExtendThresholdPercent field value if set, zero value otherwise.
func (o *ApiMachineMount) GetExtendThresholdPercent() int32 {
	if o == nil || IsNil(o.ExtendThresholdPercent) {
		var ret int32
		return ret
	}
	return *o.ExtendThresholdPercent
}

// GetExtendThresholdPercentOk returns a tuple with the ExtendThresholdPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineMount) GetExtendThresholdPercentOk() (*int32, bool) {
	if o == nil || IsNil(o.ExtendThresholdPercent) {
		return nil, false
	}
	return o.ExtendThresholdPercent, true
}

// HasExtendThresholdPercent returns a boolean if a field has been set.
func (o *ApiMachineMount) HasExtendThresholdPercent() bool {
	if o != nil && !IsNil(o.ExtendThresholdPercent) {
		return true
	}

	return false
}

// SetExtendThresholdPercent gets a reference to the given int32 and assigns it to the ExtendThresholdPercent field.
func (o *ApiMachineMount) SetExtendThresholdPercent(v int32) {
	o.ExtendThresholdPercent = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiMachineMount) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineMount) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiMachineMount) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiMachineMount) SetName(v string) {
	o.Name = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ApiMachineMount) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineMount) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ApiMachineMount) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ApiMachineMount) SetPath(v string) {
	o.Path = &v
}

// GetSizeGb returns the SizeGb field value if set, zero value otherwise.
func (o *ApiMachineMount) GetSizeGb() int32 {
	if o == nil || IsNil(o.SizeGb) {
		var ret int32
		return ret
	}
	return *o.SizeGb
}

// GetSizeGbOk returns a tuple with the SizeGb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineMount) GetSizeGbOk() (*int32, bool) {
	if o == nil || IsNil(o.SizeGb) {
		return nil, false
	}
	return o.SizeGb, true
}

// HasSizeGb returns a boolean if a field has been set.
func (o *ApiMachineMount) HasSizeGb() bool {
	if o != nil && !IsNil(o.SizeGb) {
		return true
	}

	return false
}

// SetSizeGb gets a reference to the given int32 and assigns it to the SizeGb field.
func (o *ApiMachineMount) SetSizeGb(v int32) {
	o.SizeGb = &v
}

// GetSizeGbLimit returns the SizeGbLimit field value if set, zero value otherwise.
func (o *ApiMachineMount) GetSizeGbLimit() int32 {
	if o == nil || IsNil(o.SizeGbLimit) {
		var ret int32
		return ret
	}
	return *o.SizeGbLimit
}

// GetSizeGbLimitOk returns a tuple with the SizeGbLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineMount) GetSizeGbLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.SizeGbLimit) {
		return nil, false
	}
	return o.SizeGbLimit, true
}

// HasSizeGbLimit returns a boolean if a field has been set.
func (o *ApiMachineMount) HasSizeGbLimit() bool {
	if o != nil && !IsNil(o.SizeGbLimit) {
		return true
	}

	return false
}

// SetSizeGbLimit gets a reference to the given int32 and assigns it to the SizeGbLimit field.
func (o *ApiMachineMount) SetSizeGbLimit(v int32) {
	o.SizeGbLimit = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *ApiMachineMount) GetVolume() string {
	if o == nil || IsNil(o.Volume) {
		var ret string
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineMount) GetVolumeOk() (*string, bool) {
	if o == nil || IsNil(o.Volume) {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *ApiMachineMount) HasVolume() bool {
	if o != nil && !IsNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given string and assigns it to the Volume field.
func (o *ApiMachineMount) SetVolume(v string) {
	o.Volume = &v
}

func (o ApiMachineMount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiMachineMount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddSizeGb) {
		toSerialize["add_size_gb"] = o.AddSizeGb
	}
	if !IsNil(o.Encrypted) {
		toSerialize["encrypted"] = o.Encrypted
	}
	if !IsNil(o.ExtendThresholdPercent) {
		toSerialize["extend_threshold_percent"] = o.ExtendThresholdPercent
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.SizeGb) {
		toSerialize["size_gb"] = o.SizeGb
	}
	if !IsNil(o.SizeGbLimit) {
		toSerialize["size_gb_limit"] = o.SizeGbLimit
	}
	if !IsNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	return toSerialize, nil
}

type NullableApiMachineMount struct {
	value *ApiMachineMount
	isSet bool
}

func (v NullableApiMachineMount) Get() *ApiMachineMount {
	return v.value
}

func (v *NullableApiMachineMount) Set(val *ApiMachineMount) {
	v.value = val
	v.isSet = true
}

func (v NullableApiMachineMount) IsSet() bool {
	return v.isSet
}

func (v *NullableApiMachineMount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiMachineMount(val *ApiMachineMount) *NullableApiMachineMount {
	return &NullableApiMachineMount{value: val, isSet: true}
}

func (v NullableApiMachineMount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiMachineMount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


