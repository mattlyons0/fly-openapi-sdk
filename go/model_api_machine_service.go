/*
Machines API

# Introduction  Fly Machines are the compute behind the Fly.io platform. They are fast-launching VMs that can be started and stopped at subsecond speeds. A Machine is the configuration and state for a single VM running on our platform. Every Machine will belong to a Fly App; Apps can have more than one Machine. Read more [here](https://fly.io/docs/machines/).  The Machines REST API allows you to provison and manage Apps, Machines and Volumes on the Fly.io platform. To manage other Fly.io resources like organizations, use the [GraphQL API](https://fly.io/docs/networking/custom-domains-with-fly/#graphql-api-notes).  ## Authentication  All requests must include the Fly API Token in the HTTP Headers as follows:  ``` Authorization: Bearer [TOKEN] ```  You can get your API token using [flyctl](https://fly.io/docs/hands-on/install-flyctl/) by running `fly auth token`  ## Base URL  The easiest (and recommended) way to connect to the Machines API is to use the public `api.machines.dev` endpoint, a simpler and more performant alternative to connecting over WireGuard. You can still access your Machines directly over a WireGuard VPN, and use the private Machines API endpoint: `http://_api.internal:4280`. This method requires more setup.  Follow the [instructions](https://fly.io/docs/networking/private-networking/#private-network-vpn) to set up a permanent WireGuard connection to your Fly.io [IPv6 private network](https://fly.io/docs/networking/private-networking/). Once youâ€™re connected, Fly internal DNS should expose the Machines API endpoint at: `http://_api.internal:4280`  ## Response Codes  The API uses conventional HTTP status codes to signal whether a request was successful or not.  Typically, 2xx HTTP status codes denote successful operations, 4xx codes imply failures related to the user, and 5xx codes suggest problems with the infrastructure.  | Status | Description                                 | | :----: | ------------------------------------------- | | `200`  | Successful request.                         | | `201`  | Created successfully.                       | | `202`  | Successful request. No content.             | | `400`  | Check that the parameters were correct.     | | `401`  | The API key used was missing or invalid.    | | `404`  | The resource was not found.                 | | `5xx`  | Indicates an error with Fly.io API servers. | 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fly-sdk

import (
	"encoding/json"
)

// checks if the ApiMachineService type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiMachineService{}

// ApiMachineService struct for ApiMachineService
type ApiMachineService struct {
	Autostart *bool `json:"autostart,omitempty"`
	Autostop *bool `json:"autostop,omitempty"`
	Checks []ApiMachineCheck `json:"checks,omitempty"`
	Concurrency *ApiMachineServiceConcurrency `json:"concurrency,omitempty"`
	ForceInstanceDescription *string `json:"force_instance_description,omitempty"`
	ForceInstanceKey *string `json:"force_instance_key,omitempty"`
	InternalPort *int32 `json:"internal_port,omitempty"`
	MinMachinesRunning *int32 `json:"min_machines_running,omitempty"`
	Ports []ApiMachinePort `json:"ports,omitempty"`
	Protocol *string `json:"protocol,omitempty"`
}

// NewApiMachineService instantiates a new ApiMachineService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiMachineService() *ApiMachineService {
	this := ApiMachineService{}
	return &this
}

// NewApiMachineServiceWithDefaults instantiates a new ApiMachineService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiMachineServiceWithDefaults() *ApiMachineService {
	this := ApiMachineService{}
	return &this
}

// GetAutostart returns the Autostart field value if set, zero value otherwise.
func (o *ApiMachineService) GetAutostart() bool {
	if o == nil || IsNil(o.Autostart) {
		var ret bool
		return ret
	}
	return *o.Autostart
}

// GetAutostartOk returns a tuple with the Autostart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineService) GetAutostartOk() (*bool, bool) {
	if o == nil || IsNil(o.Autostart) {
		return nil, false
	}
	return o.Autostart, true
}

// HasAutostart returns a boolean if a field has been set.
func (o *ApiMachineService) HasAutostart() bool {
	if o != nil && !IsNil(o.Autostart) {
		return true
	}

	return false
}

// SetAutostart gets a reference to the given bool and assigns it to the Autostart field.
func (o *ApiMachineService) SetAutostart(v bool) {
	o.Autostart = &v
}

// GetAutostop returns the Autostop field value if set, zero value otherwise.
func (o *ApiMachineService) GetAutostop() bool {
	if o == nil || IsNil(o.Autostop) {
		var ret bool
		return ret
	}
	return *o.Autostop
}

// GetAutostopOk returns a tuple with the Autostop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineService) GetAutostopOk() (*bool, bool) {
	if o == nil || IsNil(o.Autostop) {
		return nil, false
	}
	return o.Autostop, true
}

// HasAutostop returns a boolean if a field has been set.
func (o *ApiMachineService) HasAutostop() bool {
	if o != nil && !IsNil(o.Autostop) {
		return true
	}

	return false
}

// SetAutostop gets a reference to the given bool and assigns it to the Autostop field.
func (o *ApiMachineService) SetAutostop(v bool) {
	o.Autostop = &v
}

// GetChecks returns the Checks field value if set, zero value otherwise.
func (o *ApiMachineService) GetChecks() []ApiMachineCheck {
	if o == nil || IsNil(o.Checks) {
		var ret []ApiMachineCheck
		return ret
	}
	return o.Checks
}

// GetChecksOk returns a tuple with the Checks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineService) GetChecksOk() ([]ApiMachineCheck, bool) {
	if o == nil || IsNil(o.Checks) {
		return nil, false
	}
	return o.Checks, true
}

// HasChecks returns a boolean if a field has been set.
func (o *ApiMachineService) HasChecks() bool {
	if o != nil && !IsNil(o.Checks) {
		return true
	}

	return false
}

// SetChecks gets a reference to the given []ApiMachineCheck and assigns it to the Checks field.
func (o *ApiMachineService) SetChecks(v []ApiMachineCheck) {
	o.Checks = v
}

// GetConcurrency returns the Concurrency field value if set, zero value otherwise.
func (o *ApiMachineService) GetConcurrency() ApiMachineServiceConcurrency {
	if o == nil || IsNil(o.Concurrency) {
		var ret ApiMachineServiceConcurrency
		return ret
	}
	return *o.Concurrency
}

// GetConcurrencyOk returns a tuple with the Concurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineService) GetConcurrencyOk() (*ApiMachineServiceConcurrency, bool) {
	if o == nil || IsNil(o.Concurrency) {
		return nil, false
	}
	return o.Concurrency, true
}

// HasConcurrency returns a boolean if a field has been set.
func (o *ApiMachineService) HasConcurrency() bool {
	if o != nil && !IsNil(o.Concurrency) {
		return true
	}

	return false
}

// SetConcurrency gets a reference to the given ApiMachineServiceConcurrency and assigns it to the Concurrency field.
func (o *ApiMachineService) SetConcurrency(v ApiMachineServiceConcurrency) {
	o.Concurrency = &v
}

// GetForceInstanceDescription returns the ForceInstanceDescription field value if set, zero value otherwise.
func (o *ApiMachineService) GetForceInstanceDescription() string {
	if o == nil || IsNil(o.ForceInstanceDescription) {
		var ret string
		return ret
	}
	return *o.ForceInstanceDescription
}

// GetForceInstanceDescriptionOk returns a tuple with the ForceInstanceDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineService) GetForceInstanceDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ForceInstanceDescription) {
		return nil, false
	}
	return o.ForceInstanceDescription, true
}

// HasForceInstanceDescription returns a boolean if a field has been set.
func (o *ApiMachineService) HasForceInstanceDescription() bool {
	if o != nil && !IsNil(o.ForceInstanceDescription) {
		return true
	}

	return false
}

// SetForceInstanceDescription gets a reference to the given string and assigns it to the ForceInstanceDescription field.
func (o *ApiMachineService) SetForceInstanceDescription(v string) {
	o.ForceInstanceDescription = &v
}

// GetForceInstanceKey returns the ForceInstanceKey field value if set, zero value otherwise.
func (o *ApiMachineService) GetForceInstanceKey() string {
	if o == nil || IsNil(o.ForceInstanceKey) {
		var ret string
		return ret
	}
	return *o.ForceInstanceKey
}

// GetForceInstanceKeyOk returns a tuple with the ForceInstanceKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineService) GetForceInstanceKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ForceInstanceKey) {
		return nil, false
	}
	return o.ForceInstanceKey, true
}

// HasForceInstanceKey returns a boolean if a field has been set.
func (o *ApiMachineService) HasForceInstanceKey() bool {
	if o != nil && !IsNil(o.ForceInstanceKey) {
		return true
	}

	return false
}

// SetForceInstanceKey gets a reference to the given string and assigns it to the ForceInstanceKey field.
func (o *ApiMachineService) SetForceInstanceKey(v string) {
	o.ForceInstanceKey = &v
}

// GetInternalPort returns the InternalPort field value if set, zero value otherwise.
func (o *ApiMachineService) GetInternalPort() int32 {
	if o == nil || IsNil(o.InternalPort) {
		var ret int32
		return ret
	}
	return *o.InternalPort
}

// GetInternalPortOk returns a tuple with the InternalPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineService) GetInternalPortOk() (*int32, bool) {
	if o == nil || IsNil(o.InternalPort) {
		return nil, false
	}
	return o.InternalPort, true
}

// HasInternalPort returns a boolean if a field has been set.
func (o *ApiMachineService) HasInternalPort() bool {
	if o != nil && !IsNil(o.InternalPort) {
		return true
	}

	return false
}

// SetInternalPort gets a reference to the given int32 and assigns it to the InternalPort field.
func (o *ApiMachineService) SetInternalPort(v int32) {
	o.InternalPort = &v
}

// GetMinMachinesRunning returns the MinMachinesRunning field value if set, zero value otherwise.
func (o *ApiMachineService) GetMinMachinesRunning() int32 {
	if o == nil || IsNil(o.MinMachinesRunning) {
		var ret int32
		return ret
	}
	return *o.MinMachinesRunning
}

// GetMinMachinesRunningOk returns a tuple with the MinMachinesRunning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineService) GetMinMachinesRunningOk() (*int32, bool) {
	if o == nil || IsNil(o.MinMachinesRunning) {
		return nil, false
	}
	return o.MinMachinesRunning, true
}

// HasMinMachinesRunning returns a boolean if a field has been set.
func (o *ApiMachineService) HasMinMachinesRunning() bool {
	if o != nil && !IsNil(o.MinMachinesRunning) {
		return true
	}

	return false
}

// SetMinMachinesRunning gets a reference to the given int32 and assigns it to the MinMachinesRunning field.
func (o *ApiMachineService) SetMinMachinesRunning(v int32) {
	o.MinMachinesRunning = &v
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *ApiMachineService) GetPorts() []ApiMachinePort {
	if o == nil || IsNil(o.Ports) {
		var ret []ApiMachinePort
		return ret
	}
	return o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineService) GetPortsOk() ([]ApiMachinePort, bool) {
	if o == nil || IsNil(o.Ports) {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *ApiMachineService) HasPorts() bool {
	if o != nil && !IsNil(o.Ports) {
		return true
	}

	return false
}

// SetPorts gets a reference to the given []ApiMachinePort and assigns it to the Ports field.
func (o *ApiMachineService) SetPorts(v []ApiMachinePort) {
	o.Ports = v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *ApiMachineService) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineService) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *ApiMachineService) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *ApiMachineService) SetProtocol(v string) {
	o.Protocol = &v
}

func (o ApiMachineService) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiMachineService) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Autostart) {
		toSerialize["autostart"] = o.Autostart
	}
	if !IsNil(o.Autostop) {
		toSerialize["autostop"] = o.Autostop
	}
	if !IsNil(o.Checks) {
		toSerialize["checks"] = o.Checks
	}
	if !IsNil(o.Concurrency) {
		toSerialize["concurrency"] = o.Concurrency
	}
	if !IsNil(o.ForceInstanceDescription) {
		toSerialize["force_instance_description"] = o.ForceInstanceDescription
	}
	if !IsNil(o.ForceInstanceKey) {
		toSerialize["force_instance_key"] = o.ForceInstanceKey
	}
	if !IsNil(o.InternalPort) {
		toSerialize["internal_port"] = o.InternalPort
	}
	if !IsNil(o.MinMachinesRunning) {
		toSerialize["min_machines_running"] = o.MinMachinesRunning
	}
	if !IsNil(o.Ports) {
		toSerialize["ports"] = o.Ports
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	return toSerialize, nil
}

type NullableApiMachineService struct {
	value *ApiMachineService
	isSet bool
}

func (v NullableApiMachineService) Get() *ApiMachineService {
	return v.value
}

func (v *NullableApiMachineService) Set(val *ApiMachineService) {
	v.value = val
	v.isSet = true
}

func (v NullableApiMachineService) IsSet() bool {
	return v.isSet
}

func (v *NullableApiMachineService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiMachineService(val *ApiMachineService) *NullableApiMachineService {
	return &NullableApiMachineService{value: val, isSet: true}
}

func (v NullableApiMachineService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiMachineService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


