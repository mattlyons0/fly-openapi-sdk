/*
Machines API

# Introduction  Fly Machines are the compute behind the Fly.io platform. They are fast-launching VMs that can be started and stopped at subsecond speeds. A Machine is the configuration and state for a single VM running on our platform. Every Machine will belong to a Fly App; Apps can have more than one Machine. Read more [here](https://fly.io/docs/machines/).  The Machines REST API allows you to provison and manage Apps, Machines and Volumes on the Fly.io platform. To manage other Fly.io resources like organizations, use the [GraphQL API](https://fly.io/docs/networking/custom-domains-with-fly/#graphql-api-notes).  ## Authentication  All requests must include the Fly API Token in the HTTP Headers as follows:  ``` Authorization: Bearer [TOKEN] ```  You can get your API token using [flyctl](https://fly.io/docs/hands-on/install-flyctl/) by running `fly auth token`  ## Base URL  The easiest (and recommended) way to connect to the Machines API is to use the public `api.machines.dev` endpoint, a simpler and more performant alternative to connecting over WireGuard. You can still access your Machines directly over a WireGuard VPN, and use the private Machines API endpoint: `http://_api.internal:4280`. This method requires more setup.  Follow the [instructions](https://fly.io/docs/networking/private-networking/#private-network-vpn) to set up a permanent WireGuard connection to your Fly.io [IPv6 private network](https://fly.io/docs/networking/private-networking/). Once you’re connected, Fly internal DNS should expose the Machines API endpoint at: `http://_api.internal:4280`  ## Response Codes  The API uses conventional HTTP status codes to signal whether a request was successful or not.  Typically, 2xx HTTP status codes denote successful operations, 4xx codes imply failures related to the user, and 5xx codes suggest problems with the infrastructure.  | Status | Description                                 | | :----: | ------------------------------------------- | | `200`  | Successful request.                         | | `201`  | Created successfully.                       | | `202`  | Successful request. No content.             | | `400`  | Check that the parameters were correct.     | | `401`  | The API key used was missing or invalid.    | | `404`  | The resource was not found.                 | | `5xx`  | Indicates an error with Fly.io API servers. | 

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fly-sdk

import (
	"encoding/json"
)

// checks if the ApiMachineConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiMachineConfig{}

// ApiMachineConfig struct for ApiMachineConfig
type ApiMachineConfig struct {
	// Optional boolean telling the Machine to destroy itself once it’s complete (default false)
	AutoDestroy *bool `json:"auto_destroy,omitempty"`
	Checks *map[string]ApiMachineCheck `json:"checks,omitempty"`
	// Deprecated: use Service.Autostart instead
	DisableMachineAutostart *bool `json:"disable_machine_autostart,omitempty"`
	Dns *ApiDNSConfig `json:"dns,omitempty"`
	// An object filled with key/value pairs to be set as environment variables
	Env *map[string]string `json:"env,omitempty"`
	Files []ApiFile `json:"files,omitempty"`
	Guest *ApiMachineGuest `json:"guest,omitempty"`
	// The docker image to run
	Image *string `json:"image,omitempty"`
	Init *ApiMachineInit `json:"init,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	Metrics *ApiMachineMetrics `json:"metrics,omitempty"`
	Mounts []ApiMachineMount `json:"mounts,omitempty"`
	Processes []ApiMachineProcess `json:"processes,omitempty"`
	Restart *ApiMachineRestart `json:"restart,omitempty"`
	Schedule *string `json:"schedule,omitempty"`
	Services []ApiMachineService `json:"services,omitempty"`
	// Deprecated: use Guest instead
	Size *string `json:"size,omitempty"`
	// Standbys enable a machine to be a standby for another. In the event of a hardware failure, the standby machine will be started.
	Standbys []string `json:"standbys,omitempty"`
	Statics []ApiStatic `json:"statics,omitempty"`
	StopConfig *ApiStopConfig `json:"stop_config,omitempty"`
}

// NewApiMachineConfig instantiates a new ApiMachineConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiMachineConfig() *ApiMachineConfig {
	this := ApiMachineConfig{}
	return &this
}

// NewApiMachineConfigWithDefaults instantiates a new ApiMachineConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiMachineConfigWithDefaults() *ApiMachineConfig {
	this := ApiMachineConfig{}
	return &this
}

// GetAutoDestroy returns the AutoDestroy field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetAutoDestroy() bool {
	if o == nil || IsNil(o.AutoDestroy) {
		var ret bool
		return ret
	}
	return *o.AutoDestroy
}

// GetAutoDestroyOk returns a tuple with the AutoDestroy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetAutoDestroyOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoDestroy) {
		return nil, false
	}
	return o.AutoDestroy, true
}

// HasAutoDestroy returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasAutoDestroy() bool {
	if o != nil && !IsNil(o.AutoDestroy) {
		return true
	}

	return false
}

// SetAutoDestroy gets a reference to the given bool and assigns it to the AutoDestroy field.
func (o *ApiMachineConfig) SetAutoDestroy(v bool) {
	o.AutoDestroy = &v
}

// GetChecks returns the Checks field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetChecks() map[string]ApiMachineCheck {
	if o == nil || IsNil(o.Checks) {
		var ret map[string]ApiMachineCheck
		return ret
	}
	return *o.Checks
}

// GetChecksOk returns a tuple with the Checks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetChecksOk() (*map[string]ApiMachineCheck, bool) {
	if o == nil || IsNil(o.Checks) {
		return nil, false
	}
	return o.Checks, true
}

// HasChecks returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasChecks() bool {
	if o != nil && !IsNil(o.Checks) {
		return true
	}

	return false
}

// SetChecks gets a reference to the given map[string]ApiMachineCheck and assigns it to the Checks field.
func (o *ApiMachineConfig) SetChecks(v map[string]ApiMachineCheck) {
	o.Checks = &v
}

// GetDisableMachineAutostart returns the DisableMachineAutostart field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetDisableMachineAutostart() bool {
	if o == nil || IsNil(o.DisableMachineAutostart) {
		var ret bool
		return ret
	}
	return *o.DisableMachineAutostart
}

// GetDisableMachineAutostartOk returns a tuple with the DisableMachineAutostart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetDisableMachineAutostartOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableMachineAutostart) {
		return nil, false
	}
	return o.DisableMachineAutostart, true
}

// HasDisableMachineAutostart returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasDisableMachineAutostart() bool {
	if o != nil && !IsNil(o.DisableMachineAutostart) {
		return true
	}

	return false
}

// SetDisableMachineAutostart gets a reference to the given bool and assigns it to the DisableMachineAutostart field.
func (o *ApiMachineConfig) SetDisableMachineAutostart(v bool) {
	o.DisableMachineAutostart = &v
}

// GetDns returns the Dns field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetDns() ApiDNSConfig {
	if o == nil || IsNil(o.Dns) {
		var ret ApiDNSConfig
		return ret
	}
	return *o.Dns
}

// GetDnsOk returns a tuple with the Dns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetDnsOk() (*ApiDNSConfig, bool) {
	if o == nil || IsNil(o.Dns) {
		return nil, false
	}
	return o.Dns, true
}

// HasDns returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasDns() bool {
	if o != nil && !IsNil(o.Dns) {
		return true
	}

	return false
}

// SetDns gets a reference to the given ApiDNSConfig and assigns it to the Dns field.
func (o *ApiMachineConfig) SetDns(v ApiDNSConfig) {
	o.Dns = &v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetEnv() map[string]string {
	if o == nil || IsNil(o.Env) {
		var ret map[string]string
		return ret
	}
	return *o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetEnvOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Env) {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasEnv() bool {
	if o != nil && !IsNil(o.Env) {
		return true
	}

	return false
}

// SetEnv gets a reference to the given map[string]string and assigns it to the Env field.
func (o *ApiMachineConfig) SetEnv(v map[string]string) {
	o.Env = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetFiles() []ApiFile {
	if o == nil || IsNil(o.Files) {
		var ret []ApiFile
		return ret
	}
	return o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetFilesOk() ([]ApiFile, bool) {
	if o == nil || IsNil(o.Files) {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasFiles() bool {
	if o != nil && !IsNil(o.Files) {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []ApiFile and assigns it to the Files field.
func (o *ApiMachineConfig) SetFiles(v []ApiFile) {
	o.Files = v
}

// GetGuest returns the Guest field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetGuest() ApiMachineGuest {
	if o == nil || IsNil(o.Guest) {
		var ret ApiMachineGuest
		return ret
	}
	return *o.Guest
}

// GetGuestOk returns a tuple with the Guest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetGuestOk() (*ApiMachineGuest, bool) {
	if o == nil || IsNil(o.Guest) {
		return nil, false
	}
	return o.Guest, true
}

// HasGuest returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasGuest() bool {
	if o != nil && !IsNil(o.Guest) {
		return true
	}

	return false
}

// SetGuest gets a reference to the given ApiMachineGuest and assigns it to the Guest field.
func (o *ApiMachineConfig) SetGuest(v ApiMachineGuest) {
	o.Guest = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *ApiMachineConfig) SetImage(v string) {
	o.Image = &v
}

// GetInit returns the Init field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetInit() ApiMachineInit {
	if o == nil || IsNil(o.Init) {
		var ret ApiMachineInit
		return ret
	}
	return *o.Init
}

// GetInitOk returns a tuple with the Init field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetInitOk() (*ApiMachineInit, bool) {
	if o == nil || IsNil(o.Init) {
		return nil, false
	}
	return o.Init, true
}

// HasInit returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasInit() bool {
	if o != nil && !IsNil(o.Init) {
		return true
	}

	return false
}

// SetInit gets a reference to the given ApiMachineInit and assigns it to the Init field.
func (o *ApiMachineConfig) SetInit(v ApiMachineInit) {
	o.Init = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *ApiMachineConfig) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetMetrics() ApiMachineMetrics {
	if o == nil || IsNil(o.Metrics) {
		var ret ApiMachineMetrics
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetMetricsOk() (*ApiMachineMetrics, bool) {
	if o == nil || IsNil(o.Metrics) {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasMetrics() bool {
	if o != nil && !IsNil(o.Metrics) {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given ApiMachineMetrics and assigns it to the Metrics field.
func (o *ApiMachineConfig) SetMetrics(v ApiMachineMetrics) {
	o.Metrics = &v
}

// GetMounts returns the Mounts field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetMounts() []ApiMachineMount {
	if o == nil || IsNil(o.Mounts) {
		var ret []ApiMachineMount
		return ret
	}
	return o.Mounts
}

// GetMountsOk returns a tuple with the Mounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetMountsOk() ([]ApiMachineMount, bool) {
	if o == nil || IsNil(o.Mounts) {
		return nil, false
	}
	return o.Mounts, true
}

// HasMounts returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasMounts() bool {
	if o != nil && !IsNil(o.Mounts) {
		return true
	}

	return false
}

// SetMounts gets a reference to the given []ApiMachineMount and assigns it to the Mounts field.
func (o *ApiMachineConfig) SetMounts(v []ApiMachineMount) {
	o.Mounts = v
}

// GetProcesses returns the Processes field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetProcesses() []ApiMachineProcess {
	if o == nil || IsNil(o.Processes) {
		var ret []ApiMachineProcess
		return ret
	}
	return o.Processes
}

// GetProcessesOk returns a tuple with the Processes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetProcessesOk() ([]ApiMachineProcess, bool) {
	if o == nil || IsNil(o.Processes) {
		return nil, false
	}
	return o.Processes, true
}

// HasProcesses returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasProcesses() bool {
	if o != nil && !IsNil(o.Processes) {
		return true
	}

	return false
}

// SetProcesses gets a reference to the given []ApiMachineProcess and assigns it to the Processes field.
func (o *ApiMachineConfig) SetProcesses(v []ApiMachineProcess) {
	o.Processes = v
}

// GetRestart returns the Restart field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetRestart() ApiMachineRestart {
	if o == nil || IsNil(o.Restart) {
		var ret ApiMachineRestart
		return ret
	}
	return *o.Restart
}

// GetRestartOk returns a tuple with the Restart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetRestartOk() (*ApiMachineRestart, bool) {
	if o == nil || IsNil(o.Restart) {
		return nil, false
	}
	return o.Restart, true
}

// HasRestart returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasRestart() bool {
	if o != nil && !IsNil(o.Restart) {
		return true
	}

	return false
}

// SetRestart gets a reference to the given ApiMachineRestart and assigns it to the Restart field.
func (o *ApiMachineConfig) SetRestart(v ApiMachineRestart) {
	o.Restart = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetSchedule() string {
	if o == nil || IsNil(o.Schedule) {
		var ret string
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetScheduleOk() (*string, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given string and assigns it to the Schedule field.
func (o *ApiMachineConfig) SetSchedule(v string) {
	o.Schedule = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetServices() []ApiMachineService {
	if o == nil || IsNil(o.Services) {
		var ret []ApiMachineService
		return ret
	}
	return o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetServicesOk() ([]ApiMachineService, bool) {
	if o == nil || IsNil(o.Services) {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasServices() bool {
	if o != nil && !IsNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given []ApiMachineService and assigns it to the Services field.
func (o *ApiMachineConfig) SetServices(v []ApiMachineService) {
	o.Services = v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *ApiMachineConfig) SetSize(v string) {
	o.Size = &v
}

// GetStandbys returns the Standbys field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetStandbys() []string {
	if o == nil || IsNil(o.Standbys) {
		var ret []string
		return ret
	}
	return o.Standbys
}

// GetStandbysOk returns a tuple with the Standbys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetStandbysOk() ([]string, bool) {
	if o == nil || IsNil(o.Standbys) {
		return nil, false
	}
	return o.Standbys, true
}

// HasStandbys returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasStandbys() bool {
	if o != nil && !IsNil(o.Standbys) {
		return true
	}

	return false
}

// SetStandbys gets a reference to the given []string and assigns it to the Standbys field.
func (o *ApiMachineConfig) SetStandbys(v []string) {
	o.Standbys = v
}

// GetStatics returns the Statics field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetStatics() []ApiStatic {
	if o == nil || IsNil(o.Statics) {
		var ret []ApiStatic
		return ret
	}
	return o.Statics
}

// GetStaticsOk returns a tuple with the Statics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetStaticsOk() ([]ApiStatic, bool) {
	if o == nil || IsNil(o.Statics) {
		return nil, false
	}
	return o.Statics, true
}

// HasStatics returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasStatics() bool {
	if o != nil && !IsNil(o.Statics) {
		return true
	}

	return false
}

// SetStatics gets a reference to the given []ApiStatic and assigns it to the Statics field.
func (o *ApiMachineConfig) SetStatics(v []ApiStatic) {
	o.Statics = v
}

// GetStopConfig returns the StopConfig field value if set, zero value otherwise.
func (o *ApiMachineConfig) GetStopConfig() ApiStopConfig {
	if o == nil || IsNil(o.StopConfig) {
		var ret ApiStopConfig
		return ret
	}
	return *o.StopConfig
}

// GetStopConfigOk returns a tuple with the StopConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMachineConfig) GetStopConfigOk() (*ApiStopConfig, bool) {
	if o == nil || IsNil(o.StopConfig) {
		return nil, false
	}
	return o.StopConfig, true
}

// HasStopConfig returns a boolean if a field has been set.
func (o *ApiMachineConfig) HasStopConfig() bool {
	if o != nil && !IsNil(o.StopConfig) {
		return true
	}

	return false
}

// SetStopConfig gets a reference to the given ApiStopConfig and assigns it to the StopConfig field.
func (o *ApiMachineConfig) SetStopConfig(v ApiStopConfig) {
	o.StopConfig = &v
}

func (o ApiMachineConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiMachineConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutoDestroy) {
		toSerialize["auto_destroy"] = o.AutoDestroy
	}
	if !IsNil(o.Checks) {
		toSerialize["checks"] = o.Checks
	}
	if !IsNil(o.DisableMachineAutostart) {
		toSerialize["disable_machine_autostart"] = o.DisableMachineAutostart
	}
	if !IsNil(o.Dns) {
		toSerialize["dns"] = o.Dns
	}
	if !IsNil(o.Env) {
		toSerialize["env"] = o.Env
	}
	if !IsNil(o.Files) {
		toSerialize["files"] = o.Files
	}
	if !IsNil(o.Guest) {
		toSerialize["guest"] = o.Guest
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Init) {
		toSerialize["init"] = o.Init
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Metrics) {
		toSerialize["metrics"] = o.Metrics
	}
	if !IsNil(o.Mounts) {
		toSerialize["mounts"] = o.Mounts
	}
	if !IsNil(o.Processes) {
		toSerialize["processes"] = o.Processes
	}
	if !IsNil(o.Restart) {
		toSerialize["restart"] = o.Restart
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Standbys) {
		toSerialize["standbys"] = o.Standbys
	}
	if !IsNil(o.Statics) {
		toSerialize["statics"] = o.Statics
	}
	if !IsNil(o.StopConfig) {
		toSerialize["stop_config"] = o.StopConfig
	}
	return toSerialize, nil
}

type NullableApiMachineConfig struct {
	value *ApiMachineConfig
	isSet bool
}

func (v NullableApiMachineConfig) Get() *ApiMachineConfig {
	return v.value
}

func (v *NullableApiMachineConfig) Set(val *ApiMachineConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableApiMachineConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableApiMachineConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiMachineConfig(val *ApiMachineConfig) *NullableApiMachineConfig {
	return &NullableApiMachineConfig{value: val, isSet: true}
}

func (v NullableApiMachineConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiMachineConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


